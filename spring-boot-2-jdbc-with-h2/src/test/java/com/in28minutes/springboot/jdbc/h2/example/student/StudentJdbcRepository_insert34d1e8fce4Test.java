// Test generated by RoostGPT for test testJune29 using AI Model gpt

package com.in28minutes.springboot.jdbc.h2.example.student;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.springframework.jdbc.core.JdbcTemplate;

import static org.mockito.Mockito.*;

@ExtendWith(MockitoExtension.class)
public class StudentJdbcRepository_insert34d1e8fce4Test {

    @InjectMocks
    private StudentJdbcRepository studentJdbcRepository;

    @Mock
    private JdbcTemplate jdbcTemplate;

    private Student student;

    @BeforeEach
    public void setUp() {
        student = new Student();
        student.setId(1);
        student.setName("John Doe");
        student.setPassportNumber("123456789");
    }

    @Test
    public void testInsertStudent_successScenario() {
        when(jdbcTemplate.update(anyString(), anyInt(), anyString(), anyString())).thenReturn(1);

        int result = studentJdbcRepository.insert(student);

        verify(jdbcTemplate, times(1)).update(anyString(), anyInt(), anyString(), anyString());
        assert(result == 1);
    }

    @Test
    public void testInsertStudent_failureScenario() {
        when(jdbcTemplate.update(anyString(), anyInt(), anyString(), anyString())).thenReturn(0);

        int result = studentJdbcRepository.insert(student);

        verify(jdbcTemplate, times(1)).update(anyString(), anyInt(), anyString(), anyString());
        assert(result == 0);
    }
}