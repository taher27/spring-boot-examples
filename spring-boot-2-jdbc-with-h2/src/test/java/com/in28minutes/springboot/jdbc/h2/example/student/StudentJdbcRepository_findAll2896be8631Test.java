// Test generated by RoostGPT for test testJune29 using AI Model gpt

package com.in28minutes.springboot.jdbc.h2.example.student;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.springframework.jdbc.core.JdbcTemplate;

import java.util.Arrays;
import java.util.List;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.ArgumentMatchers.anyString;
import static org.mockito.Mockito.when;

public class StudentJdbcRepository_findAll2896be8631Test {

    @InjectMocks
    StudentJdbcRepository studentJdbcRepository;

    @Mock
    JdbcTemplate jdbcTemplate;

    @BeforeEach
    public void setUp() throws Exception {
        MockitoAnnotations.initMocks(this);
    }

    @Test
    public void testFindAll_studentsExist() {
        Student student1 = new Student(1, "John", "Doe", "johndoe@example.com");
        Student student2 = new Student(2, "Jane", "Doe", "janedoe@example.com");

        when(jdbcTemplate.query(anyString(), any(StudentRowMapper.class))).thenReturn(Arrays.asList(student1, student2));

        List<Student> students = studentJdbcRepository.findAll();

        assertEquals(2, students.size());
        assertEquals(student1, students.get(0));
        assertEquals(student2, students.get(1));
    }

    @Test
    public void testFindAll_noStudentsExist() {
        when(jdbcTemplate.query(anyString(), any(StudentRowMapper.class))).thenReturn(Arrays.asList());

        List<Student> students = studentJdbcRepository.findAll();

        assertEquals(0, students.size());
    }
}